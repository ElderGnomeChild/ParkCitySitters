# Generated by Django 2.2.6 on 2019-11-18 04:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Babysitter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('babysitter_lname', models.CharField(default='last name', max_length=30)),
                ('babysitter_fname', models.CharField(default='first name', max_length=30)),
                ('babysitter_phone', models.CharField(default='not set', max_length=16)),
                ('babysitter_years_of_experience', models.PositiveIntegerField(default=0)),
                ('babysitter_address_street1', models.CharField(default='no address on file', max_length=50)),
                ('babysitter_address_street2', models.CharField(blank=True, max_length=20, null=True)),
                ('babysitter_address_city', models.CharField(max_length=25, null=True)),
                ('babysitter_address_state', models.CharField(default='UT', max_length=2)),
                ('babysitter_address_zip', models.PositiveIntegerField(default='00000')),
                ('babysitter_works_with_disabilities', models.BooleanField(default=False)),
                ('babysitter_age01_or_younger', models.BooleanField(default=False)),
                ('babysitter_age02', models.BooleanField(default=True)),
                ('babysitter_age03', models.BooleanField(default=True)),
                ('babysitter_age04', models.BooleanField(default=True)),
                ('babysitter_age05', models.BooleanField(default=True)),
                ('babysitter_age06', models.BooleanField(default=True)),
                ('babysitter_age07', models.BooleanField(default=True)),
                ('babysitter_age08', models.BooleanField(default=True)),
                ('babysitter_age09', models.BooleanField(default=True)),
                ('babysitter_age10', models.BooleanField(default=True)),
                ('babysitter_age11', models.BooleanField(default=True)),
                ('babysitter_age12_plus', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_firstname', models.CharField(max_length=25)),
                ('child_age_years', models.IntegerField(verbose_name='years old')),
                ('child_age_months', models.IntegerField(verbose_name='months old')),
                ('child_allergies', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('client_phone', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=50)),
                ('datetime_start', models.DateTimeField()),
                ('datetime_end', models.DateTimeField()),
                ('num_child', models.PositiveIntegerField()),
                ('child', models.ManyToManyField(blank=True, to='sit.Child')),
                ('client', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sit.Client')),
                ('sitter', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='child',
            name='child_parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sit.Client'),
        ),
        migrations.AddField(
            model_name='babysitter',
            name='babysitter_languages',
            field=models.ManyToManyField(to='sit.Language'),
        ),
        migrations.AddField(
            model_name='babysitter',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='babysitter',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
